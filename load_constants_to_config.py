import numpy as np
import inspect
import sys
import yaml
from Functions import Size2Pos


def parse_input():
    if sys.argv == []:
        print("USAGE: python load_constants_to_config.py instance.yaml")
        exit()
    return sys.argv[1]

# This procedure just sets the global variables (constants) to the config file
# This isn't done in the test_algo.py since changes did only take place in the second iteration.


def load_constants(yamlfile: yaml) -> object:
    with open(yamlfile) as instanceyaml:
        #This procedu
        file = yaml.load(instanceyaml, Loader=yaml.FullLoader)
        #Load editable config file
        unprepared_config_file = open("editable_config.py","r")
        #Copy content of this very config file
        config_file = open("config.py","w")
        config_file.write("#Do not edit this file; changes will be overwritten!\n"+unprepared_config_file.read())
        config_file.close()
        #Append dynamic variables (currenlty only container_size)
        config_file = open("config.py","a")
        config_file.write("\n" + "CONTAINER_SIZE = " + ((str((Size2Pos(file['data']['containerkinds'][0]['loadingspaces'][0]['size'])))).replace(" ",",")).replace(",,",","))
        config_file.write("\n" + "SOLUTION_FILE_NAME = \"" + sys.arv[2] + "\"")
        config_file.close()
    instanceyaml.close()




if __name__ == "__main__":
    # get container and boxes file information
    instance = parse_input()
    load_constants(instance)
